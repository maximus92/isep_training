# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message
 
GET     /signin                     controllers.SigninController.index
POST    /signin                     controllers.SigninController.connexion

GET     /logout                     controllers.SigninController.logout


##### PROFESSOR ROUTES #####

GET     /prof                       controllers.ProfessorController.index
POST    /add-module                 controllers.ProfessorController.addModule
POST    /select-module              controllers.ProfessorController.selectModule
POST    /delete-module              controllers.ProfessorController.deleteModule
POST    /detail-module              controllers.ProfessorController.detailModule

POST    /add-chapter              	controllers.ProfessorController.addChapter
POST    /delete-chapter             controllers.ProfessorController.deleteChapter
POST    /select-chapter             controllers.ProfessorController.selectChapter

POST    /select-question            controllers.ProfessorController.selectQuestion
POST    /delete-question            controllers.ProfessorController.deleteQuestion
POST    /filter-question           controllers.ProfessorController.filterQuestion


POST    /add-test                 	controllers.ProfessorController.addTest
POST    /select-test-prof           controllers.ProfessorController.selectTest
POST	/enable-test-prof			controllers.ProfessorController.enableTest
POST    /addq                       controllers.ProfessorController.addQ

POST    /import-question            controllers.ProfessorController.importQuestion
POST    /get-csv-column-title      	controllers.ProfessorController.GetCsvColumnTitle
POST	/preview-csv				controllers.ProfessorController.PreviewCsv

POST    /select-answer            controllers.ProfessorController.selectAnswerWithQuestion

POST    /update-question            controllers.ProfessorController.updateQuestionWithAnswer


POST    /select-test-answer       controllers.ProfessorController.selectAnswerWithQuestionByIdTest
POST    /delete-test              controllers.ProfessorController.deleteTest

POST	/add-exam				controllers.ProfessorController.addExam
POST    /select-exam            controllers.ProfessorController.selectExam
POST    /delete-exam             controllers.ProfessorController.deleteExam



##### STUDENT ROUTES #####

GET     /student                    		controllers.StudentController.index
GET		/student/qcmSettings				controllers.StudentController.studentQcmSettings
POST	/student/trainingQcmSettings		controllers.StudentController.studentPostTrainingQcmSettings

GET 	/student/trainingQcm				controllers.StudentController.studentTrainingQcm(question_num: Integer)

POST 	/student/updateQcm					controllers.StudentController.updateQcm

POST	/student/checkbox					controllers.StudentController.answersSelected

GET		/student/resultat					controllers.StudentController.qcmResultat(id_qcm: Integer)

POST 	/student/getCorrectionForQuestion 	controllers.StudentController.getCorrectionForQuestion

GET 	/student/qcmPreview					controllers.StudentController.qcmPreview(id_qcm: Integer)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
